<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
  <link href="/stylesheets/event.css" rel="stylesheet">
  <script src="https://kit.fontawesome.com/a2d20e5bcc.js" crossorigin="anonymous"></script>
  <script src="https://code.jquery.com/jquery-3.5.1.js" crossorigin="anonymous"></script>
  <title>Add Your Availablity</title>
</head>

<body>
  <form action="/users/pending-events" method="get">
    <button class="arrow prev"><i class="arrow-icon fa-solid fa-angle-left"></i></button>
  </form>
  <form action="/users/pending-events" method="get">
    <button class="arrow next" onclick="sendTimeFrames()"><i class="fa-solid fa-check"></i></button>
  </form>
  <div class="reponse_ctn">
    <div class="event-info event-info-response">
      <h1 class="event-info-header">Event Information</h1>
      <label>Event Name</label>
      <div id="event-name" class="event-input response-info-input">Web Meeting</div>
      <label>Date</label>
      <div id="event-date" class="event-input response-info-input"></div>
      <label>Duration (in minute)</label>
      <div id="event-duration" class="event-input response-info-input">150</div>
      <label>Time Zones</label>
      <div id="event-timezone" class="event-input response-info-input">(GMT-12:00) International Date Line West</div>
      <label>Online/Offline</label>
      <div id="event-status" class="event-input response-info-input">Online</div>
      <label>Due Date</label>
      <div id="event-duedate" class="event-input response-info-input"></div>
      <label id="link">Link/Location</label>
      <div id="event-link" class="event-input response-info-input">Link</div>
    </div>

  </div>
  <script>
    var event_id = <%=event_id%>
      var duration;
    var cur_avails = [];
    $(document).ready(function () {
      var xhttp = new XMLHttpRequest();

      xhttp.onreadystatechange = function () {
        if (this.readyState == 4 && this.status == 200) {
          let cur_event = JSON.parse(this.responseText)[0];
          console.log(JSON.parse(this.responseText))
          let event_name = document.getElementById("event-name");
          event_name.innerText = cur_event["event_name"]
          let event_date = document.getElementById("event-date")
          event_date.innerText = cur_event["date"]
          let event_duration = document.getElementById("event-duration");
          event_duration.innerText = cur_event["duration"]
          duration = cur_event["duration"]
          let event_timezone = document.getElementById("event-timezone");
          event_timezone.innerText = cur_event["time_zone"]
          let event_status = document.getElementById("event-status");
          if (cur_event["isOnline"] == 0) {
            event_status.innerText = "Offline"
          }
          else {
            event_status.innerText = "Online"
          }
          let event_duedate = document.getElementById("event-duedate");
          event_duedate.innerText = cur_event["due_date"]
          let event_link = document.getElementById("event-link");
          event_link.innerText = cur_event["hold_location"]
        }
      }

      xhttp.open("POST", "/users/getEvent", true);
      xhttp.setRequestHeader("Content-type", "application/json");
      xhttp.send(JSON.stringify({ event_id: event_id }));
    })

    const sendTimeFrames = () => {
      let chosenTF = document.getElementsByClassName("chosen-tf");
      let tfArr = [];
      for (tf of chosenTF) {
        tfArr.push(cur_avails[tf.id])
      }
      console.log(tfArr)

      // delete chosen time
      var xhttp = new XMLHttpRequest();

      xhttp.onreadystatechange = function () {
        if (this.readyState == 4 && this.status == 200) {

        }
      }

      xhttp.open("POST", "/users/deleteChosenTime", true);
      xhttp.setRequestHeader("Content-type", "application/json");
      xhttp.send(JSON.stringify({ event_id: event_id }));

      // add chosen time

      for (let i = 0; i < tfArr.length; i++) {
        tf = tfArr[i]["avail_time"];
        addChosenTime(tf)
      }

    }

    function addChosenTime(chosen_time) {
      var xhttp = new XMLHttpRequest();
      xhttp.onreadystatechange = function () {
        if (this.readyState == 4 && this.status == 200) {
        }
      }

      xhttp.open("POST", "/users/addChosenTime", true);
      xhttp.setRequestHeader("Content-type", "application/json");
      xhttp.send(JSON.stringify({ event_id: event_id, chosen_time: chosen_time }));
    }

  </script>
</body>

</html>