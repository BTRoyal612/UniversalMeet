<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
  <link href="/stylesheets/event.css" rel="stylesheet">
  <script src="https://kit.fontawesome.com/a2d20e5bcc.js" crossorigin="anonymous"></script>
  <script src="https://code.jquery.com/jquery-3.5.1.js" crossorigin="anonymous"></script>
  <script src="/javascripts/invite-response.js"></script>
  <title>Document</title>
</head>

<body>
  <%=eventId%>
    <div class="arrow prev"><i class="arrow-icon fa-solid fa-angle-left"></i></div>
    <div class="arrow next" onclick="sendTimeFrames()"><i class="fa-solid fa-check"></i></div>
    <div class="reponse_ctn">
      <div class="event-info event-info-response">
        <h1 class="event-info-header">Event Information</h1>
        <label>Event Name</label>
        <div id="event-name" class="event-input response-info-input">Web Meeting</div>
        <label>Date</label>
        <div id="event-date" class="event-input response-info-input"></div>
        <label>Duration (in minute)</label>
        <div id="event-duration" class="event-input response-info-input">150</div>
        <label>Time Zones</label>
        <div id="event-timezone" class="event-input response-info-input">(GMT-12:00) International Date Line West</div>
        <label>Online/Offline</label>
        <div id="event-status" class="event-input response-info-input">Online</div>
        <label>Due Date</label>
        <div id="event-duedate" class="event-input response-info-input"></div>
        <label id="link">Link/Location</label>
        <div id="event-link" class="event-input response-info-input">Link</div>
      </div>
      <div class="avail-ctn-box event-info-response">
        <h1 class="avail-header">Choose Availabilities</h1>
        <div class="avail-ctn response-avail-ctn">
        </div>
      </div>
    </div>
    <script>
      var event_id = <%=eventId%>
      var duration;
      var cur_avails = [];
      $(document).ready(function () {
        var xhttp = new XMLHttpRequest();

        xhttp.onreadystatechange = function () {
          if (this.readyState == 4 && this.status == 200) {
            let cur_event = JSON.parse(this.responseText)[0];
            let event_name = document.getElementById("event-name");
            event_name.innerText = cur_event["event_name"]
            let event_date = document.getElementById("event-date")
            event_date.innerText = cur_event["date"]
            let event_duration = document.getElementById("event-duration");
            event_duration.innerText = cur_event["duration"]
            duration = cur_event["duration"]
            let event_timezone = document.getElementById("event-timezone");
            event_timezone.innerText = cur_event["time_zone"]
            let event_status = document.getElementById("event-status");
            if (cur_event["isOnline"] == 0) {
              event_status.innerText = "Offline"
            }
            else {
              event_status.innerText = "Online"
            }
            let event_duedate = document.getElementById("event-duedate");
            event_duedate.innerText = cur_event["due_date"]
            let event_link = document.getElementById("event-link");
            event_link.innerText = cur_event["hold_location"]
          }
        }

        xhttp.open("POST", "/users/getEvent", true);
        xhttp.setRequestHeader("Content-type", "application/json");
        xhttp.send(JSON.stringify({ event_id: event_id }));


        // get Availablity
        var xhttp = new XMLHttpRequest();

        xhttp.onreadystatechange = function () {
          if (this.readyState == 4 && this.status == 200) {
            let avails = JSON.parse(this.responseText);
            cur_avails = [...avails]
            console.log(avails)
            var ctn = document.getElementsByClassName('response-avail-ctn')[0];
            for (let i in avails) {
              var tfDIV = document.createElement('div');
              tfDIV.classList.add('event-input');
              tfDIV.classList.add('response-info-tf-input');
              tfDIV.id = i
              tfDIV.onclick = function () {
                this.classList.toggle("chosen-tf")
              };
              tfDIV.innerText = 'From ' + avails[i]['avail_time'];
              ctn.appendChild(tfDIV);
            }

          }
        }

        xhttp.open("POST", "/users/showAvailability", true);
        xhttp.setRequestHeader("Content-type", "application/json");
        xhttp.send(JSON.stringify({ event_id: event_id }));
      })

      const sendTimeFrames = () => {
        let chosenTF = document.getElementsByClassName("chosen-tf");
        let tfArr = [];
        for (tf of chosenTF) {
          tfArr.push(cur_avails[tf.id])
        }
        console.log(tfArr)

        // delete chosen time
        var xhttp = new XMLHttpRequest();

        xhttp.onreadystatechange = function () {
          if (this.readyState == 4 && this.status == 200) {

          }
        }

        xhttp.open("POST", "/users/deleteChosenTime", true);
        xhttp.setRequestHeader("Content-type", "application/json");
        xhttp.send(JSON.stringify({ event_id: event_id }));

        // add chosen time

        for (let i = 0; i < tfArr.length; i++) {
          tf = tfArr[i]["avail_time"];
          addChosenTime(tf)
        }

      }

      function addChosenTime(chosen_time) {
        var xhttp = new XMLHttpRequest();
        xhttp.onreadystatechange = function () {
          if (this.readyState == 4 && this.status == 200) {
          }
        }

        xhttp.open("POST", "/users/addChosenTime", true);
        xhttp.setRequestHeader("Content-type", "application/json");
        xhttp.send(JSON.stringify({ chosen_time: chosen_time }));
      }

    </script>
</body>

</html>